//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp3.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ICAN.ir/Farzin/WebServices/", ConfigurationName="ServiceReference1.AuthenticationSoap")]
    public interface AuthenticationSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICAN.ir/Farzin/WebServices/SetLicenseKey", ReplyAction="*")]
        WindowsFormsApp3.ServiceReference1.SetLicenseKeyResponse SetLicenseKey(WindowsFormsApp3.ServiceReference1.SetLicenseKeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICAN.ir/Farzin/WebServices/SetLicenseKey", ReplyAction="*")]
        System.Threading.Tasks.Task<WindowsFormsApp3.ServiceReference1.SetLicenseKeyResponse> SetLicenseKeyAsync(WindowsFormsApp3.ServiceReference1.SetLicenseKeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICAN.ir/Farzin/WebServices/Login", ReplyAction="*")]
        WindowsFormsApp3.ServiceReference1.LoginResponse Login(WindowsFormsApp3.ServiceReference1.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICAN.ir/Farzin/WebServices/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<WindowsFormsApp3.ServiceReference1.LoginResponse> LoginAsync(WindowsFormsApp3.ServiceReference1.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICAN.ir/Farzin/WebServices/Login2", ReplyAction="*")]
        WindowsFormsApp3.ServiceReference1.Login2Response Login2(WindowsFormsApp3.ServiceReference1.Login2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICAN.ir/Farzin/WebServices/Login2", ReplyAction="*")]
        System.Threading.Tasks.Task<WindowsFormsApp3.ServiceReference1.Login2Response> Login2Async(WindowsFormsApp3.ServiceReference1.Login2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICAN.ir/Farzin/WebServices/Logout", ReplyAction="*")]
        WindowsFormsApp3.ServiceReference1.LogoutResponse Logout(WindowsFormsApp3.ServiceReference1.LogoutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICAN.ir/Farzin/WebServices/Logout", ReplyAction="*")]
        System.Threading.Tasks.Task<WindowsFormsApp3.ServiceReference1.LogoutResponse> LogoutAsync(WindowsFormsApp3.ServiceReference1.LogoutRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetLicenseKeyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetLicenseKey", Namespace="http://ICAN.ir/Farzin/WebServices/", Order=0)]
        public WindowsFormsApp3.ServiceReference1.SetLicenseKeyRequestBody Body;
        
        public SetLicenseKeyRequest() {
        }
        
        public SetLicenseKeyRequest(WindowsFormsApp3.ServiceReference1.SetLicenseKeyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://ICAN.ir/Farzin/WebServices/")]
    public partial class SetLicenseKeyRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string ApplicationName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Challenge;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Random;
        
        public SetLicenseKeyRequestBody() {
        }
        
        public SetLicenseKeyRequestBody(string ApplicationName, string Challenge, string Random) {
            this.ApplicationName = ApplicationName;
            this.Challenge = Challenge;
            this.Random = Random;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetLicenseKeyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetLicenseKeyResponse", Namespace="http://ICAN.ir/Farzin/WebServices/", Order=0)]
        public WindowsFormsApp3.ServiceReference1.SetLicenseKeyResponseBody Body;
        
        public SetLicenseKeyResponse() {
        }
        
        public SetLicenseKeyResponse(WindowsFormsApp3.ServiceReference1.SetLicenseKeyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://ICAN.ir/Farzin/WebServices/")]
    public partial class SetLicenseKeyResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool SetLicenseKeyResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string strErrorMsg;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int iErrorCode;
        
        public SetLicenseKeyResponseBody() {
        }
        
        public SetLicenseKeyResponseBody(bool SetLicenseKeyResult, string strErrorMsg, int iErrorCode) {
            this.SetLicenseKeyResult = SetLicenseKeyResult;
            this.strErrorMsg = strErrorMsg;
            this.iErrorCode = iErrorCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Login", Namespace="http://ICAN.ir/Farzin/WebServices/", Order=0)]
        public WindowsFormsApp3.ServiceReference1.LoginRequestBody Body;
        
        public LoginRequest() {
        }
        
        public LoginRequest(WindowsFormsApp3.ServiceReference1.LoginRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://ICAN.ir/Farzin/WebServices/")]
    public partial class LoginRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string userName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string password;
        
        public LoginRequestBody() {
        }
        
        public LoginRequestBody(string userName, string password) {
            this.userName = userName;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LoginResponse", Namespace="http://ICAN.ir/Farzin/WebServices/", Order=0)]
        public WindowsFormsApp3.ServiceReference1.LoginResponseBody Body;
        
        public LoginResponse() {
        }
        
        public LoginResponse(WindowsFormsApp3.ServiceReference1.LoginResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://ICAN.ir/Farzin/WebServices/")]
    public partial class LoginResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool LoginResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string strErrorMsg;
        
        public LoginResponseBody() {
        }
        
        public LoginResponseBody(bool LoginResult, string strErrorMsg) {
            this.LoginResult = LoginResult;
            this.strErrorMsg = strErrorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class Login2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Login2", Namespace="http://ICAN.ir/Farzin/WebServices/", Order=0)]
        public WindowsFormsApp3.ServiceReference1.Login2RequestBody Body;
        
        public Login2Request() {
        }
        
        public Login2Request(WindowsFormsApp3.ServiceReference1.Login2RequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://ICAN.ir/Farzin/WebServices/")]
    public partial class Login2RequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string ApplicationName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Challenge;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Random;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string NativeID;
        
        public Login2RequestBody() {
        }
        
        public Login2RequestBody(string ApplicationName, string Challenge, string Random, string NativeID) {
            this.ApplicationName = ApplicationName;
            this.Challenge = Challenge;
            this.Random = Random;
            this.NativeID = NativeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class Login2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Login2Response", Namespace="http://ICAN.ir/Farzin/WebServices/", Order=0)]
        public WindowsFormsApp3.ServiceReference1.Login2ResponseBody Body;
        
        public Login2Response() {
        }
        
        public Login2Response(WindowsFormsApp3.ServiceReference1.Login2ResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://ICAN.ir/Farzin/WebServices/")]
    public partial class Login2ResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool Login2Result;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string strErrorMsg;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int iErrorCode;
        
        public Login2ResponseBody() {
        }
        
        public Login2ResponseBody(bool Login2Result, string strErrorMsg, int iErrorCode) {
            this.Login2Result = Login2Result;
            this.strErrorMsg = strErrorMsg;
            this.iErrorCode = iErrorCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogoutRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Logout", Namespace="http://ICAN.ir/Farzin/WebServices/", Order=0)]
        public WindowsFormsApp3.ServiceReference1.LogoutRequestBody Body;
        
        public LogoutRequest() {
        }
        
        public LogoutRequest(WindowsFormsApp3.ServiceReference1.LogoutRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class LogoutRequestBody {
        
        public LogoutRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogoutResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LogoutResponse", Namespace="http://ICAN.ir/Farzin/WebServices/", Order=0)]
        public WindowsFormsApp3.ServiceReference1.LogoutResponseBody Body;
        
        public LogoutResponse() {
        }
        
        public LogoutResponse(WindowsFormsApp3.ServiceReference1.LogoutResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://ICAN.ir/Farzin/WebServices/")]
    public partial class LogoutResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool LogoutResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string strErrorMsg;
        
        public LogoutResponseBody() {
        }
        
        public LogoutResponseBody(bool LogoutResult, string strErrorMsg) {
            this.LogoutResult = LogoutResult;
            this.strErrorMsg = strErrorMsg;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AuthenticationSoapChannel : WindowsFormsApp3.ServiceReference1.AuthenticationSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationSoapClient : System.ServiceModel.ClientBase<WindowsFormsApp3.ServiceReference1.AuthenticationSoap>, WindowsFormsApp3.ServiceReference1.AuthenticationSoap {
        
        public AuthenticationSoapClient() {
        }
        
        public AuthenticationSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WindowsFormsApp3.ServiceReference1.SetLicenseKeyResponse WindowsFormsApp3.ServiceReference1.AuthenticationSoap.SetLicenseKey(WindowsFormsApp3.ServiceReference1.SetLicenseKeyRequest request) {
            return base.Channel.SetLicenseKey(request);
        }
        
        public bool SetLicenseKey(string ApplicationName, string Challenge, string Random, out string strErrorMsg, out int iErrorCode) {
            WindowsFormsApp3.ServiceReference1.SetLicenseKeyRequest inValue = new WindowsFormsApp3.ServiceReference1.SetLicenseKeyRequest();
            inValue.Body = new WindowsFormsApp3.ServiceReference1.SetLicenseKeyRequestBody();
            inValue.Body.ApplicationName = ApplicationName;
            inValue.Body.Challenge = Challenge;
            inValue.Body.Random = Random;
            WindowsFormsApp3.ServiceReference1.SetLicenseKeyResponse retVal = ((WindowsFormsApp3.ServiceReference1.AuthenticationSoap)(this)).SetLicenseKey(inValue);
            strErrorMsg = retVal.Body.strErrorMsg;
            iErrorCode = retVal.Body.iErrorCode;
            return retVal.Body.SetLicenseKeyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WindowsFormsApp3.ServiceReference1.SetLicenseKeyResponse> WindowsFormsApp3.ServiceReference1.AuthenticationSoap.SetLicenseKeyAsync(WindowsFormsApp3.ServiceReference1.SetLicenseKeyRequest request) {
            return base.Channel.SetLicenseKeyAsync(request);
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApp3.ServiceReference1.SetLicenseKeyResponse> SetLicenseKeyAsync(string ApplicationName, string Challenge, string Random) {
            WindowsFormsApp3.ServiceReference1.SetLicenseKeyRequest inValue = new WindowsFormsApp3.ServiceReference1.SetLicenseKeyRequest();
            inValue.Body = new WindowsFormsApp3.ServiceReference1.SetLicenseKeyRequestBody();
            inValue.Body.ApplicationName = ApplicationName;
            inValue.Body.Challenge = Challenge;
            inValue.Body.Random = Random;
            return ((WindowsFormsApp3.ServiceReference1.AuthenticationSoap)(this)).SetLicenseKeyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WindowsFormsApp3.ServiceReference1.LoginResponse WindowsFormsApp3.ServiceReference1.AuthenticationSoap.Login(WindowsFormsApp3.ServiceReference1.LoginRequest request) {
            return base.Channel.Login(request);
        }
        
        public bool Login(string userName, string password, out string strErrorMsg) {
            WindowsFormsApp3.ServiceReference1.LoginRequest inValue = new WindowsFormsApp3.ServiceReference1.LoginRequest();
            inValue.Body = new WindowsFormsApp3.ServiceReference1.LoginRequestBody();
            inValue.Body.userName = userName;
            inValue.Body.password = password;
            WindowsFormsApp3.ServiceReference1.LoginResponse retVal = ((WindowsFormsApp3.ServiceReference1.AuthenticationSoap)(this)).Login(inValue);
            strErrorMsg = retVal.Body.strErrorMsg;
            return retVal.Body.LoginResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WindowsFormsApp3.ServiceReference1.LoginResponse> WindowsFormsApp3.ServiceReference1.AuthenticationSoap.LoginAsync(WindowsFormsApp3.ServiceReference1.LoginRequest request) {
            return base.Channel.LoginAsync(request);
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApp3.ServiceReference1.LoginResponse> LoginAsync(string userName, string password) {
            WindowsFormsApp3.ServiceReference1.LoginRequest inValue = new WindowsFormsApp3.ServiceReference1.LoginRequest();
            inValue.Body = new WindowsFormsApp3.ServiceReference1.LoginRequestBody();
            inValue.Body.userName = userName;
            inValue.Body.password = password;
            return ((WindowsFormsApp3.ServiceReference1.AuthenticationSoap)(this)).LoginAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WindowsFormsApp3.ServiceReference1.Login2Response WindowsFormsApp3.ServiceReference1.AuthenticationSoap.Login2(WindowsFormsApp3.ServiceReference1.Login2Request request) {
            return base.Channel.Login2(request);
        }
        
        public bool Login2(string ApplicationName, string Challenge, string Random, string NativeID, out string strErrorMsg, out int iErrorCode) {
            WindowsFormsApp3.ServiceReference1.Login2Request inValue = new WindowsFormsApp3.ServiceReference1.Login2Request();
            inValue.Body = new WindowsFormsApp3.ServiceReference1.Login2RequestBody();
            inValue.Body.ApplicationName = ApplicationName;
            inValue.Body.Challenge = Challenge;
            inValue.Body.Random = Random;
            inValue.Body.NativeID = NativeID;
            WindowsFormsApp3.ServiceReference1.Login2Response retVal = ((WindowsFormsApp3.ServiceReference1.AuthenticationSoap)(this)).Login2(inValue);
            strErrorMsg = retVal.Body.strErrorMsg;
            iErrorCode = retVal.Body.iErrorCode;
            return retVal.Body.Login2Result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WindowsFormsApp3.ServiceReference1.Login2Response> WindowsFormsApp3.ServiceReference1.AuthenticationSoap.Login2Async(WindowsFormsApp3.ServiceReference1.Login2Request request) {
            return base.Channel.Login2Async(request);
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApp3.ServiceReference1.Login2Response> Login2Async(string ApplicationName, string Challenge, string Random, string NativeID) {
            WindowsFormsApp3.ServiceReference1.Login2Request inValue = new WindowsFormsApp3.ServiceReference1.Login2Request();
            inValue.Body = new WindowsFormsApp3.ServiceReference1.Login2RequestBody();
            inValue.Body.ApplicationName = ApplicationName;
            inValue.Body.Challenge = Challenge;
            inValue.Body.Random = Random;
            inValue.Body.NativeID = NativeID;
            return ((WindowsFormsApp3.ServiceReference1.AuthenticationSoap)(this)).Login2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WindowsFormsApp3.ServiceReference1.LogoutResponse WindowsFormsApp3.ServiceReference1.AuthenticationSoap.Logout(WindowsFormsApp3.ServiceReference1.LogoutRequest request) {
            return base.Channel.Logout(request);
        }
        
        public bool Logout(out string strErrorMsg) {
            WindowsFormsApp3.ServiceReference1.LogoutRequest inValue = new WindowsFormsApp3.ServiceReference1.LogoutRequest();
            inValue.Body = new WindowsFormsApp3.ServiceReference1.LogoutRequestBody();
            WindowsFormsApp3.ServiceReference1.LogoutResponse retVal = ((WindowsFormsApp3.ServiceReference1.AuthenticationSoap)(this)).Logout(inValue);
            strErrorMsg = retVal.Body.strErrorMsg;
            return retVal.Body.LogoutResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WindowsFormsApp3.ServiceReference1.LogoutResponse> WindowsFormsApp3.ServiceReference1.AuthenticationSoap.LogoutAsync(WindowsFormsApp3.ServiceReference1.LogoutRequest request) {
            return base.Channel.LogoutAsync(request);
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApp3.ServiceReference1.LogoutResponse> LogoutAsync() {
            WindowsFormsApp3.ServiceReference1.LogoutRequest inValue = new WindowsFormsApp3.ServiceReference1.LogoutRequest();
            inValue.Body = new WindowsFormsApp3.ServiceReference1.LogoutRequestBody();
            return ((WindowsFormsApp3.ServiceReference1.AuthenticationSoap)(this)).LogoutAsync(inValue);
        }
    }
}
